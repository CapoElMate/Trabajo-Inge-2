// <auto-generated />
using System;
using Data_Access_Layer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data_Access_Layer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250514222611_add Cliente, Empleado, Rol, Permiso, PermisoEspecial and UsuarioRegistrado_PermisoEspecial")]
    partial class addClienteEmpleadoRolPermisoPermisoEspecialandUsuarioRegistrado_PermisoEspecial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Domain_Layer.Entidades.Cliente", b =>
                {
                    b.Property<string>("DNI")
                        .HasColumnType("TEXT");

                    b.HasKey("DNI");

                    b.HasIndex("DNI")
                        .IsUnique();

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Domain_Layer.Entidades.Empleado", b =>
                {
                    b.Property<string>("DNI")
                        .HasColumnType("TEXT");

                    b.Property<int>("nroEmpleado")
                        .HasColumnType("INTEGER");

                    b.HasKey("DNI");

                    b.HasIndex("DNI")
                        .IsUnique();

                    b.HasIndex("nroEmpleado")
                        .IsUnique();

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("Domain_Layer.Entidades.Permiso", b =>
                {
                    b.Property<int>("idPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("idPermiso");

                    b.ToTable("Permiso");
                });

            modelBuilder.Entity("Domain_Layer.Entidades.PermisoEspecial", b =>
                {
                    b.Property<string>("Permiso")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Permiso");

                    b.ToTable("PermisoEspeciales");
                });

            modelBuilder.Entity("Domain_Layer.Entidades.Rol", b =>
                {
                    b.Property<int>("idRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("idRol");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("Domain_Layer.Entidades.UsuarioRegistrado", b =>
                {
                    b.Property<string>("DNI")
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<string>("Altura")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("TEXT");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("TEXT");

                    b.Property<string>("Dpto")
                        .HasMaxLength(70)
                        .HasColumnType("TEXT");

                    b.Property<int>("Edad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("TEXT");

                    b.Property<string>("EntreCalles")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("mailVerificado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("passwordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DNI");

                    b.HasIndex("DNI")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("passwordHash")
                        .IsUnique();

                    b.ToTable("UsuariosRegistrados");
                });

            modelBuilder.Entity("Domain_Layer.Entidades.UsuarioRegistrado_PermisoEspecial", b =>
                {
                    b.Property<string>("UsuarioRegistradoDNI")
                        .HasColumnType("TEXT");

                    b.Property<string>("Permiso")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("fecEmision")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("fecVencimiento")
                        .HasColumnType("TEXT");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UsuarioRegistradoDNI", "Permiso");

                    b.HasIndex("Permiso");

                    b.ToTable("UsuarioRegistrado_PermisoEspecial");
                });

            modelBuilder.Entity("PermisoRol", b =>
                {
                    b.Property<int>("PermisosidPermiso")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RolesidRol")
                        .HasColumnType("INTEGER");

                    b.HasKey("PermisosidPermiso", "RolesidRol");

                    b.HasIndex("RolesidRol");

                    b.ToTable("PermisoRol");
                });

            modelBuilder.Entity("Domain_Layer.Entidades.Cliente", b =>
                {
                    b.HasOne("Domain_Layer.Entidades.UsuarioRegistrado", "UsuarioRegistrado")
                        .WithOne("Cliente")
                        .HasForeignKey("Domain_Layer.Entidades.Cliente", "DNI")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioRegistrado");
                });

            modelBuilder.Entity("Domain_Layer.Entidades.Empleado", b =>
                {
                    b.HasOne("Domain_Layer.Entidades.Cliente", "Cliente")
                        .WithOne("Empleado")
                        .HasForeignKey("Domain_Layer.Entidades.Empleado", "DNI")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Domain_Layer.Entidades.UsuarioRegistrado_PermisoEspecial", b =>
                {
                    b.HasOne("Domain_Layer.Entidades.PermisoEspecial", "PermisoEspecial")
                        .WithMany("UsuariosRegistrados")
                        .HasForeignKey("Permiso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain_Layer.Entidades.UsuarioRegistrado", "UsuarioRegistrado")
                        .WithMany("PermisosEspeciales")
                        .HasForeignKey("UsuarioRegistradoDNI")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PermisoEspecial");

                    b.Navigation("UsuarioRegistrado");
                });

            modelBuilder.Entity("PermisoRol", b =>
                {
                    b.HasOne("Domain_Layer.Entidades.Permiso", null)
                        .WithMany()
                        .HasForeignKey("PermisosidPermiso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain_Layer.Entidades.Rol", null)
                        .WithMany()
                        .HasForeignKey("RolesidRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain_Layer.Entidades.Cliente", b =>
                {
                    b.Navigation("Empleado")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain_Layer.Entidades.PermisoEspecial", b =>
                {
                    b.Navigation("UsuariosRegistrados");
                });

            modelBuilder.Entity("Domain_Layer.Entidades.UsuarioRegistrado", b =>
                {
                    b.Navigation("Cliente")
                        .IsRequired();

                    b.Navigation("PermisosEspeciales");
                });
#pragma warning restore 612, 618
        }
    }
}
